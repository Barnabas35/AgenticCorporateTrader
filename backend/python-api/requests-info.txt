
The following are requests that can be made to the API.
Each entry includes the url, the method, and the parameters that can be passed to the API as well as the expected response.

### Get random number (DEBUG) ---------------------------
URL & Method: GET /random-number
Response: JSON - A random integer number between 0 and 1000
Example:
{
  "random_number": 123
}


### Get number of users (DEBUG) -------------------------
URL & Method: GET /user-count
Response: JSON - The number of users in the database
Example:
{
  "user_count": 123
}


### Login user ------------------------------------------
URL & Method: POST /login
Headers:
 - Content-Type: application/json
Body (JSON):
{
  "email": "string",
  "password": "string"
}
Response: JSON - Session token and status message
Example:
{
  "session_token": "yh1vtDb71lexRhXJJW2gnQhzv",
  "status": "Success"
}


### Register user ---------------------------------------
URL & Method: POST /register
Headers:
 - Content-Type: application/json
Body (JSON):
{
  "username": "string",
  "password": "string",
  "email": "string",
  "user_type": "string"
}
Response: JSON - Status message
Example:
{
  "status": "Success"
}


### Get username ----------------------------------------
URL & Method: POST /get-username
Headers:
 - Content-Type: application/json
Body (JSON):
{
  "session_token": "string"
}
Response: JSON - Username and status message
Example:
{
  "username": "string",
  "status": "Success"
}


### Get email -------------------------------------------
URL & Method: POST /get-email
Headers:
 - Content-Type: application/json
Body (JSON):
{
  "session_token": "string"
}
Response: JSON - Email and status message
Example:
{
  "email": "string",
  "status": "Success"
}


### Get user profile icon url ---------------------------
URL & Method: POST /get-profile-icon
Headers:
 - Content-Type: application/json
Body (JSON):
{
  "session_token": "string"
}
Response: JSON - Profile icon url and status message
Example:
{
  "url": "string",
  "status": "Success"
}
INFO: Image is 256x256 pixels.
WARNING: The profile icon url expires after 3 minutes. Already loaded images will not be affected.
WARNING: Maximum 5000 requests per day before limit is reached. Download the image where possible.


### Add client ------------------------------------------
URL & Method: POST /add-client
Headers:
 - Content-Type: application/json
Body (JSON):
{
  "session_token": "string",
  "client_name": "string",
}
Response: JSON - Status message
Example:
{
  "status": "Success"
}


### Get client list -------------------------------------
URL & Method: POST /get-client-list
Headers:
 - Content-Type: application/json
Body (JSON):
{
  "session_token": "string"
}
Response: JSON - List of clients and status message
Example:
{
  "clients": [
    {"client_name": "client1", "id": "AgSO2FnIP46FA"},
    {"client_name": "client2", "id": "AgSO2FnIP46FB"}
  ],
  "status": "Success"
}


### Remove client ---------------------------------------
URL & Method: POST /remove-client
Headers:
 - Content-Type: application/json
Body (JSON):
{
  "session_token": "string",
  "client_name": "string"
}
Response: JSON - Status message
Example:
{
  "status": "Success"
}


### Submit support ticket -------------------------------
URL & Method: POST /submit-support-ticket
Headers:
 - Content-Type: application/json
Body (JSON):
{
  "session_token": "string",
  "issue_description": "string",
  "issue_subject": "string"
}
Response: JSON - Status message
Example:
{
  "status": "Success"
}


### Get support ticket list -----------------------------
URL & Method: POST /get-support-ticket-list
Headers:
 - Content-Type: application/json
Body (JSON):
{
  "session_token": "string"         // User session token of an admin
}
Response: JSON - List of support tickets and status message
Example:
{
  "support_tickets": [
    {"issue_subject": "subject1",
     "user_id": "AgSO2FnIP46FA",
     "issue_description": "description1",
     "issue_status": "open",
     "ticket_id": "AgSO2FnIP46FA",
     "unix_timestamp": 1234567890},

    {"issue_subject": "subject2",
     "user_id": "AgSO2FnIP46FB",
     "issue_description": "description2",
     "issue_status": "closed",
     "ticket_id": "AgSO2FnIP46FB",
     "unix_timestamp": 1234567890}
  ],
  "status": "Success"
}


### Resolve support ticket ------------------------------
URL & Method: POST /resolve-support-ticket
Headers:
 - Content-Type: application/json
Body (JSON):
{
  "session_token": "string",        // User session token of an admin
  "ticket_id": "string"
  "response_subject": "string",     // Email subject
  "response_body": "string"         // Email body
}
Response: JSON - Status message
Example:
{
  "status": "Success"
}


### Submit review ---------------------------------------
URL & Method: POST /submit-review
Headers:
 - Content-Type: application/json
Body (JSON):
{
  "session_token": "string",
  "review_score": "integer",        // 1 to 5
  "review_comment": "string"
}
Response: JSON - Status message
Example:
{
  "status": "Success"
}


### Get review list -------------------------------------
URL & Method: POST /get-review-list
Headers:
 - Content-Type: application/json
Body (JSON):
{
  "session_token": "string"        // User session token of an admin
}
Response: JSON - List of reviews and status message
Example:
{
  "reviews": [
    {"score": 5,
     "comment": "comment1",
     "user_id": "AgSO2FnIP46FA"},

    {"score": 3,
     "comment": "comment2",
     "user_id": "AgSO2FnIP46FB"}
  ],
  "status": "Success"
}


### Get top stocks --------------------------------------
URL & Method: GET /get-top-stocks
Parameters:
 - limit: integer (optional) - Number of top stocks to return (default 10)
Response: JSON - List of top stocks
Example:
{
  "ticker_details": [
    {"symbol": "AAPL", "company_name": "Apple Inc.", "price": 123.45, "currency": "usd"},
    {"symbol": "GOOGL", "company_name": "Google Inc.", "price": 678.90, "currency": "usd"}
  ],
  "status": "Success"
}


### Search stock markets --------------------------------
URL & Method: POST /text-search-markets
Headers:
 - Content-Type: application/json
Body (JSON):
{
  "search_query": "string",
  "limit": "integer",        // Number of results to return (default 5, min 1, max 50)
  "session_token": "string",
  "show_price": "boolean"    // Show price in results (default false, true takes twice as long)
}
Response: JSON - List of tickers
Example:
{
  "ticker_details": [
    {"symbol": "AAPL", "company_name": "Apple Inc.", "price": 123.45, "currency": "usd"},
    {"symbol": "GOOGL", "company_name": "Google Inc.", "price": 678.90, "currency": "usd"}
  ],
  "status": "Success"
}


### Get user type ---------------------------------------
URL & Method: POST /get-user-type
Headers:
 - Content-Type: application/json
Body (JSON):
{
  "session_token": "string"
}
Response: JSON - User type and status message
Example:
{
  "user_type": "string",        // "admin" or "fa" or "fm"
  "status": "Success"
}
